{"version":3,"sources":["../../src/util/store.js"],"names":["idIndex","Store","store","keys","obj","id","Date","getTime","push","indexOf","index","splice","elements","l","length","i","element","cb"],"mappings":";;;;;;;;;;AAAA;;AAEA,IAAIA,UAAU,CAAd;;IAEqBC,K;AACjB,qBAAc;AAAA;;AACV,aAAKC,KAAL,GAAa,EAAb;AACA,aAAKC,IAAL,GAAY,EAAZ;AACH;;;;4BACGC,G,EAAK;AACL,gBAAMC,UAAQ,IAAIC,IAAJ,GAAWC,OAAX,EAAR,GAA+BP,OAArC;AACAA,uBAAW,CAAX;AACA,iBAAKG,IAAL,CAAUK,IAAV,CAAeH,EAAf;AACA,iBAAKH,KAAL,CAAWG,EAAX,IAAiBD,GAAjB;AACH;;;4BACGC,E,EAAID,G,EAAK;AACT,iBAAKD,IAAL,CAAUK,IAAV,CAAeH,EAAf;AACA,iBAAKH,KAAL,CAAWG,EAAX,IAAiBD,GAAjB;AACA,mBAAO,IAAP;AACH;;;4BACGC,E,EAAI;AACJ,mBAAO,KAAKH,KAAL,CAAWG,EAAX,CAAP;AACH;;;4BACGA,E,EAAI;AACJ,mBAAO,KAAKF,IAAL,CAAUM,OAAV,CAAkBJ,EAAlB,MAA0B,CAAC,CAAlC;AACH;;;gCACMA,E,EAAI;AACP,mBAAO,KAAKH,KAAL,CAAWG,EAAX,CAAP;AACA,gBAAMK,QAAQ,KAAKP,IAAL,CAAUM,OAAV,CAAkBJ,EAAlB,CAAd;AACA,gBAAIK,QAAQ,CAAC,CAAb,EAAgB;AACZ,qBAAKP,IAAL,CAAUQ,MAAV,CAAiBD,KAAjB,EAAwB,CAAxB;AACH;AACD,mBAAO,IAAP;AACH;;;iCACQ;AACL,gBAAME,WAAW,EAAjB;AACA,gBAAMC,IAAI,KAAKV,IAAL,CAAUW,MAApB;AACA,iBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,CAApB,EAAuBE,KAAK,CAA5B,EAA+B;AAC3B,oBAAMC,UAAU,KAAKd,KAAL,CAAW,KAAKC,IAAL,CAAUY,CAAV,CAAX,CAAhB;AACAH,yBAASJ,IAAT,CAAcQ,OAAd;AACH;AACD,mBAAOJ,QAAP;AACH;;;gCACOK,E,EAAI;AACR,gBAAMJ,IAAI,KAAKV,IAAL,CAAUW,MAApB;AACA,iBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,CAApB,EAAuBE,KAAK,CAA5B,EAA+B;AAC3B,oBAAMC,UAAU,KAAKd,KAAL,CAAW,KAAKC,IAAL,CAAUY,CAAV,CAAX,CAAhB;AACAE,mBAAGD,OAAH;AACH;AACJ;;;gCACO;AACJ,iBAAKb,IAAL,GAAY,EAAZ;AACA,iBAAKD,KAAL,GAAa,EAAb;AACH;;;;;;kBAjDgBD,K","file":"store.js","sourcesContent":["// es5 implementation of both Map and Set\n\nlet idIndex = 0;\n\nexport default class Store {\n    constructor() {\n        this.store = {};\n        this.keys = [];\n    }\n    add(obj) {\n        const id = `${new Date().getTime()}${idIndex}`;\n        idIndex += 1;\n        this.keys.push(id);\n        this.store[id] = obj;\n    }\n    set(id, obj) {\n        this.keys.push(id);\n        this.store[id] = obj;\n        return this;\n    }\n    get(id) {\n        return this.store[id];\n    }\n    has(id) {\n        return this.keys.indexOf(id) !== -1;\n    }\n    delete(id) {\n        delete this.store[id];\n        const index = this.keys.indexOf(id);\n        if (index > -1) {\n            this.keys.splice(index, 1);\n        }\n        return this;\n    }\n    values() {\n        const elements = [];\n        const l = this.keys.length;\n        for (let i = 0; i < l; i += 1) {\n            const element = this.store[this.keys[i]];\n            elements.push(element);\n        }\n        return elements;\n    }\n    forEach(cb) {\n        const l = this.keys.length;\n        for (let i = 0; i < l; i += 1) {\n            const element = this.store[this.keys[i]];\n            cb(element);\n        }\n    }\n    clear() {\n        this.keys = [];\n        this.store = {};\n    }\n}\n"]}