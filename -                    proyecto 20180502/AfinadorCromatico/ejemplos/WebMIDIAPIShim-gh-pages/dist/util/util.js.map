{"version":3,"sources":["../../src/util/util.js"],"names":["getScope","getDevice","generateUUID","polyfill","Scope","device","window","global","scope","platform","browser","navigator","node","process","nodejs","mobile","ua","userAgent","match","indexOf","polyfillPerformance","performance","Date","now","getTime","nowOffset","timing","navigationStart","d","uuid","Array","join","replace","c","r","Math","random","floor","toString","toUpperCase","polyfillPromise","Promise","promise","executor","prototype","then","resolve","reject"],"mappings":"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","file":"util.js","sourcesContent":["let Scope;\nlet device = null;\n\n// check if we are in a browser or in Nodejs\nexport function getScope() {\n    if (typeof Scope !== 'undefined') {\n        return Scope;\n    }\n    Scope = null;\n    if (typeof window !== 'undefined') {\n        Scope = window;\n    } else if (typeof global !== 'undefined') {\n        Scope = global;\n    }\n    // console.log('scope', scope);\n    return Scope;\n}\n\n\n// check on what type of device we are running, note that in this context\n// a device is a computer not a MIDI device\nexport function getDevice() {\n    const scope = getScope();\n    if (device !== null) {\n        return device;\n    }\n\n    let platform = 'undetected';\n    let browser = 'undetected';\n\n    if (scope.navigator.node === true) {\n        device = {\n            platform: process.platform,\n            nodejs: true,\n            mobile: platform === 'ios' || platform === 'android',\n        };\n        return device;\n    }\n\n    const ua = scope.navigator.userAgent;\n\n    if (ua.match(/(iPad|iPhone|iPod)/g)) {\n        platform = 'ios';\n    } else if (ua.indexOf('Android') !== -1) {\n        platform = 'android';\n    } else if (ua.indexOf('Linux') !== -1) {\n        platform = 'linux';\n    } else if (ua.indexOf('Macintosh') !== -1) {\n        platform = 'osx';\n    } else if (ua.indexOf('Windows') !== -1) {\n        platform = 'windows';\n    }\n\n    if (ua.indexOf('Chrome') !== -1) {\n        // chrome, chromium and canary\n        browser = 'chrome';\n\n        if (ua.indexOf('OPR') !== -1) {\n            browser = 'opera';\n        } else if (ua.indexOf('Chromium') !== -1) {\n            browser = 'chromium';\n        }\n    } else if (ua.indexOf('Safari') !== -1) {\n        browser = 'safari';\n    } else if (ua.indexOf('Firefox') !== -1) {\n        browser = 'firefox';\n    } else if (ua.indexOf('Trident') !== -1) {\n        browser = 'ie';\n        if (ua.indexOf('MSIE 9') !== -1) {\n            browser = 'ie9';\n        }\n    }\n\n    if (platform === 'ios') {\n        if (ua.indexOf('CriOS') !== -1) {\n            browser = 'chrome';\n        }\n    }\n\n    device = {\n        platform,\n        browser,\n        mobile: platform === 'ios' || platform === 'android',\n        nodejs: false,\n    };\n    return device;\n}\n\n\n// polyfill for window.performance.now()\nconst polyfillPerformance = () => {\n    const scope = getScope();\n    if (typeof scope.performance === 'undefined') {\n        scope.performance = {};\n    }\n    Date.now = Date.now || (() => new Date().getTime());\n\n    if (typeof scope.performance.now === 'undefined') {\n        let nowOffset = Date.now();\n        if (\n            typeof scope.performance.timing !== 'undefined' &&\n            typeof scope.performance.timing.navigationStart !== 'undefined'\n        ) {\n            nowOffset = scope.performance.timing.navigationStart;\n        }\n        scope.performance.now = function now() {\n            return Date.now() - nowOffset;\n        };\n    }\n}\n\n// generates UUID for MIDI devices\nexport function generateUUID() {\n    let d = new Date().getTime();\n    let uuid = new Array(64).join('x');// 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';\n    uuid = uuid.replace(/[xy]/g, (c) => {\n        const r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16).toUpperCase();\n    });\n    return uuid;\n}\n\n\n// a very simple implementation of a Promise for Internet Explorer and Nodejs\nconst polyfillPromise = () => {\n    const scope = getScope();\n    if (typeof scope.Promise !== 'function') {\n        scope.Promise = function promise(executor) {\n            this.executor = executor;\n        };\n\n        scope.Promise.prototype.then = function then(resolve, reject) {\n            if (typeof resolve !== 'function') {\n                resolve = () => { };\n            }\n            if (typeof reject !== 'function') {\n                reject = () => { };\n            }\n            this.executor(resolve, reject);\n        };\n    }\n}\n\n\nexport function polyfill() {\n    const d = getDevice();\n    // console.log(device);\n    if (d.browser === 'ie' || d.nodejs === true) {\n        polyfillPromise();\n    }\n    polyfillPerformance();\n}\n\n"]}